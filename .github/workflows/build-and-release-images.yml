name: Build images and add to ghcr.io upon release
on:
  release:
    types:
      - published

jobs:
  proxy:
    name: Push proxy image to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: stolon-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/stolon-proxy,enable=true
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest
            type=sha

      - name: Build and push stolon images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.proxy
          push: true
          platforms: 'linux/amd64,linux/arm64'
          tags: ${{ steps.stolon-meta.outputs.tags }}
          labels: ${{ steps.stolon-meta.outputs.labels }}

  sentinel:
    name: Push sentinel image to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: stolon-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/stolon-sentinel,enable=true
          tags: |
            type=semver,pattern={{raw}}
            type=raw,value=latest
            type=sha

      - name: Build and push stolon images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.sentinel
          push: true
          platforms: 'linux/amd64,linux/arm64'
          tags: ${{ steps.stolon-meta.outputs.tags }}
          labels: ${{ steps.stolon-meta.outputs.labels }}

  keeper:
    name: Push keeper images to ghcr.io
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    strategy:
      matrix:
        pgversion: ['13', '14', '15', '16', '17']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: stolon-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            name=ghcr.io/${{ github.repository_owner }}/stolon-keeper,enable=true
          tags: |
            type=raw,value=${{ matrix.pgversion }}-latest
            type=raw,value=${{ matrix.pgversion }}-${github.ref_name}
            type=sha

      - name: Build and push stolon images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.keeper
          push: true
          platforms: 'linux/amd64,linux/arm64'
          tags: ${{ steps.stolon-meta.outputs.tags }}
          labels: ${{ steps.stolon-meta.outputs.labels }}
          build-args: VERSION=${{ github.ref_name }}
        env:
          PGVERSION: ${{matrix.pgversion}}
